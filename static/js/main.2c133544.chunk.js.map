{"version":3,"sources":["components/Contact/Contact.module.css","transitions/slide.module.css","transitions/pop.module.css","components/App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Message/Message.module.css","transitions/appear.module.css","redux/phonebook/phonebookReducers.js","redux/phonebook/phonebookTypes.js","redux/rootReducer.js","redux/store.js","redux/phonebook/phonebookActions.js","redux/phonebook/phonebookSelectors.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/Message/Message.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactFormContainer.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsReducer","createReducer","state","action","payload","contact","filter","id","filterReducer","value","combineReducers","contacts","rootReducer","phonebook","phonebookReducer","store","configureStore","reducer","devTools","process","addContact","createAction","deleteContact","changeFilter","getContacts","getContactsLength","length","getFilterValue","getFilteredContacts","createSelector","filterValue","name","toLowerCase","includes","Contact","number","handleDeleteContact","className","styles","contactWrap","deleteBtn","type","onClick","ContactList","TransitionGroup","component","contactList","map","CSSTransition","key","timeout","unmountOnExit","classNames","slideTransition","connect","phonebookSelectors","dispatch","phonebookActions","Filter","search","onChange","e","target","placeholder","Message","text","container","ContactForm","messageText","messageIsShowing","inputIds","nameId","shortid","generate","numberId","handleChange","setState","findMatchingContact","find","createContact","showMessage","prevState","setTimeout","handleSubmit","preventDefault","props","trim","isNaN","resetForm","this","persistedContacts","localStorage","getItem","JSON","parse","el","err","Error","prevProps","setItem","stringify","contactForm","onSubmit","htmlFor","label","inputName","input","submitBtn","in","popTransition","Component","contactsLength","wrapper","appearTransition","appear","heading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c133544.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"primary-box-shadow\":\"1px 1px 5px 1px #D3D3D3\",\"contactWrap\":\"Contact_contactWrap__3MfPF\",\"contact\":\"Contact_contact__2fauP\",\"name\":\"Contact_name__a2eNp\",\"number\":\"Contact_number__2e3M8\",\"deleteBtn\":\"Contact_deleteBtn__tBUJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__ziRz3\",\"enterActive\":\"slide_enterActive__1VpSY\",\"exit\":\"slide_exit__2K1Bv\",\"exitActive\":\"slide_exitActive__15nJU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__VQhRP\",\"enterActive\":\"pop_enterActive__2qKPj\",\"exit\":\"pop_exit__3QAUD\",\"exitActive\":\"pop_exitActive__3uVw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../variables.module.css'\",\"primary-font-stack\":\"Roboto, sans-serif\",\"wrapper\":\"App_wrapper__2eE1d\",\"heading\":\"App_heading__3IGuf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__10hON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"color-light-grey\":\"#8c8c8d\",\"search\":\"Filter_search__10Yh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__11EdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__1u9xj\",\"appearActive\":\"appear_appearActive__2iZE4\"};","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport * as types from './phonebookTypes';\n\nconst contactsReducer = createReducer([], {\n  [types.ADD_CONTACT]: (state, action) => [...state, action.payload.contact],\n\n  [types.DELETE_CONTACT]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload.id),\n});\n\nconst filterReducer = createReducer('', {\n  [types.CHANGE_FILTER]: (state, action) => action.payload.value,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\n// Without Redux Toolkit\n\n// import { combineReducers } from 'redux';\n// import types from './phonebookTypes';\n\n// const contactsReducer = ([], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD_CONTACT:\n//       return [...state, payload.contact];\n\n//     case types.DELETE_CONTACT:\n//       return state.filter(contact => contact.id !== payload.id);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload.value;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   contacts: contactsReducer,\n//   filter: filterReducer,\n// });\n","export const ADD_CONTACT = 'phonebook/ADD_CONTACT';\nexport const DELETE_CONTACT = 'phonebook/DELETE_CONTACT';\nexport const CHANGE_FILTER = 'phonebook/CHANGE_FILTER';\n\n// Without Redux Toolkit\n\n// export default {\n//   ADD_CONTACT: 'ADD_CONTACT',\n//   DELETE_CONTACT: 'DELETE_CONTACT',\n//   CHANGE_FILTER: 'CHANGE_FILTER',\n// };\n","import { combineReducers } from 'redux';\nimport phonebookReducer from './phonebook/phonebookReducers';\n\nconst rootReducer = combineReducers({\n  phonebook: phonebookReducer,\n});\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n\n// Without Redux Toolkit\n\n// import { createStore, combineReducers } from 'redux';\n// import { devToolsEnhancer } from 'redux-devtools-extension';\n// import phonebookReducer from './phonebook/phonebookReducers';\n\n// const rootReducer = combineReducers({\n//   phonebook: phonebookReducer,\n// });\n\n// const store = createStore(rootReducer, devToolsEnhancer());\n\n// export default store;\n","import { createAction } from '@reduxjs/toolkit';\nimport * as types from './phonebookTypes';\n\nexport const addContact = createAction(types.ADD_CONTACT);\nexport const deleteContact = createAction(types.DELETE_CONTACT);\nexport const changeFilter = createAction(types.CHANGE_FILTER);\n\n// Without Redux Toolkit\n\n// import types from './phonebookTypes';\n\n// export const addContact = contact => ({\n//   type: types.ADD_CONTACT,\n//   payload: {\n//     contact,\n//   },\n// });\n\n// export const deleteContact = id => ({\n//   type: types.DELETE_CONTACT,\n//   payload: {\n//     id,\n//   },\n// });\n\n// export const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: {\n//     value,\n//   },\n// });\n","import { createSelector } from 'reselect';\n\nexport const getContacts = store => store.phonebook.contacts;\n\nexport const getContactsLength = store => store.phonebook.contacts.length;\n\nexport const getFilterValue = store => store.phonebook.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilterValue],\n  (contacts, filterValue) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase()),\n    ),\n);\n\n// Without createSelector\n\n// export const getFilteredContacts = store => {\n//   const contacts = getContacts(store);\n//   const filterValue = getFilterValue(store);\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filterValue.toLowerCase()),\n//   );\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, handleDeleteContact }) => (\n  <div className={styles.contactWrap}>\n    <p className={styles.contact}>\n      <span className={styles.name}>{name}</span>:{' '}\n      <span className={styles.number}>{number}</span>\n    </p>\n    <button\n      className={styles.deleteBtn}\n      type=\"button\"\n      onClick={handleDeleteContact}\n    >\n      Delete\n    </button>\n  </div>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport styles from './ContactList.module.css';\nimport slideTransition from '../../transitions/slide.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\n      {contacts.map(contact => (\n        <CSSTransition\n          key={contact.id}\n          timeout={250}\n          unmountOnExit\n          classNames={slideTransition}\n        >\n          <li>\n            <Contact\n              name={contact.name}\n              number={contact.number}\n              handleDeleteContact={() => deleteContact(contact.id)}\n            />\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport * as phonebookActions from '../../redux/phonebook/phonebookActions';\nimport * as phonebookSelectors from '../../redux/phonebook/phonebookSelectors';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = store => ({\n  contacts: phonebookSelectors.getFilteredContacts(store),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(phonebookActions.deleteContact({ id })),\n  // Without Redux Toolkit\n  // deleteContact: id => dispatch(phonebookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, changeFilter }) => {\n  return (\n    <input\n      className={styles.search}\n      type=\"text\"\n      value={value}\n      onChange={e => changeFilter(e.target.value)}\n      placeholder=\"Find contact...\"\n    />\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport * as phonebookActions from '../../redux/phonebook/phonebookActions';\nimport * as phonebookSelectors from '../../redux/phonebook/phonebookSelectors';\nimport Filter from './Filter';\n\nconst mapStateToProps = store => ({\n  value: phonebookSelectors.getFilterValue(store),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: value => dispatch(phonebookActions.changeFilter({ value })),\n  // Without Redux Toolkit\n  // changeFilter: value => dispatch(phonebookActions.changeFilter(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Message.module.css';\n\nconst Message = ({ text }) => {\n  return (\n    <div className={styles.container}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport shortid from 'shortid';\nimport Message from '../Message/Message';\nimport styles from './ContactForm.module.css';\nimport popTransition from '../../transitions/pop.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n      }).isRequired,\n    ).isRequired,\n    addContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    messageText: '',\n    messageIsShowing: false,\n  };\n\n  inputIds = {\n    nameId: shortid.generate(),\n    numberId: shortid.generate(),\n  };\n\n  componentDidMount() {\n    try {\n      const { addContact } = this.props;\n      const persistedContacts = localStorage.getItem('contacts');\n      if (persistedContacts) {\n        const contacts = JSON.parse(persistedContacts);\n        contacts.map(el => addContact(el));\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    try {\n      const { contacts } = this.props;\n      if (prevState.contacts !== contacts) {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  findMatchingContact = (contacts, name) =>\n    contacts.find(contact => contact.name === name);\n\n  createContact = (name, number) => ({\n    id: shortid.generate(),\n    name,\n    number,\n  });\n\n  showMessage = text => {\n    this.setState(\n      prevState => ({\n        messageIsShowing: !prevState.messageIsShowing,\n        messageText: text,\n      }),\n      () =>\n        setTimeout(() => {\n          this.setState(prevState => ({\n            messageIsShowing: !prevState.messageIsShowing,\n            messageText: '',\n          }));\n        }, 2000),\n    );\n  };\n\n  // eslint-disable-next-line consistent-return\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { contacts, addContact } = this.props;\n\n    if (name.trim() === '' || number.trim() === '')\n      return this.showMessage('Please fill out the form');\n\n    // eslint-disable-next-line no-restricted-globals\n    if (isNaN(+number)) return this.showMessage('Wrong number format');\n\n    const matchingContact = this.findMatchingContact(contacts, name);\n\n    if (matchingContact) return this.showMessage('Contact already exists');\n\n    addContact(this.createContact(name, number));\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number, messageText, messageIsShowing } = this.state;\n    const { nameId, numberId } = this.inputIds;\n\n    return (\n      <>\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n          <label htmlFor={nameId} className={styles.label}>\n            <span className={styles.inputName}>Enter name:</span>\n            <input\n              id={nameId}\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name...\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor={numberId} className={styles.label}>\n            <span className={styles.inputName}>Enter number:</span>\n            <input\n              id={numberId}\n              className={styles.input}\n              type=\"text\"\n              name=\"number\"\n              placeholder=\"Enter phone number...\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={styles.submitBtn}>\n            Save contact\n          </button>\n        </form>\n        <CSSTransition\n          in={messageIsShowing}\n          timeout={250}\n          classNames={popTransition}\n          unmountOnExit\n        >\n          <Message text={messageText} />\n        </CSSTransition>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport * as phonebookActions from '../../redux/phonebook/phonebookActions';\nimport * as phonebookSelectors from '../../redux/phonebook/phonebookSelectors';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = store => ({\n  contacts: phonebookSelectors.getContacts(store),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: contact => dispatch(phonebookActions.addContact({ contact })),\n  // Without Redux Toolkit\n  // addContact: contact => dispatch(phonebookActions.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactList from './ContactList/ContactListContainer';\nimport Filter from './Filter/FilterContainer';\nimport ContactForm from './ContactForm/ContactFormContainer';\nimport * as phonebookSelectors from '../redux/phonebook/phonebookSelectors';\nimport styles from './App.module.css';\nimport popTransition from '../transitions/pop.module.css';\nimport slideTransition from '../transitions/slide.module.css';\nimport appearTransition from '../transitions/appear.module.css';\n\nconst App = ({ contactsLength }) => {\n  return (\n    <div className={styles.wrapper}>\n      <CSSTransition in timeout={500} classNames={appearTransition} appear>\n        <h1 className={styles.heading}>Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm />\n\n      <h2 className={styles.heading}>Contacts</h2>\n\n      <CSSTransition\n        in={contactsLength > 1}\n        timeout={250}\n        classNames={popTransition}\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n      <CSSTransition\n        in={contactsLength > 0}\n        timeout={250}\n        classNames={slideTransition}\n        unmountOnExit\n      >\n        <ContactList />\n      </CSSTransition>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  contactsLength: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = store => ({\n  contactsLength: phonebookSelectors.getContactsLength(store),\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\nimport 'normalize.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"primary-box-shadow\":\"1px 1px 5px 1px #D3D3D3\",\"contactForm\":\"ContactForm_contactForm__caxvZ\",\"label\":\"ContactForm_label__GBGo7\",\"inputName\":\"ContactForm_inputName__2-25V\",\"input\":\"ContactForm_input__2lU76\",\"submitBtn\":\"ContactForm_submitBtn__2XgTj\"};"],"sourceRoot":""}